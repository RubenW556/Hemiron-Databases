image: nielsprins/ipsenh-ci

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - backend/.npm/
    - frontend/.npm/

.pull_cached_node_modules:
  cache:
    untracked: true
    policy: pull
    key:
      files:
        - package-lock.json
    paths:
      - .npm/

stages:
  - setup
  - test
  - build
  - deploy

npm_install:
  stage: setup
  script:
    - (cd ./backend && npm ci --cache .npm --prefer-offline)
    - (cd ./frontend && npm ci --cache .npm --prefer-offline)

backend_audit:
  stage: test
  allow_failure: true
  needs:
    - backend_setup
  extends: .pull_cached_node_modules
  script:
    - (cd ./backend && npm audit)

frontend_audit:
  stage: test
  allow_failure: true
  needs:
    - frontend_setup
  extends: .pull_cached_node_modules
  script:
    - (cd ./frontend && npm audit)

backend_lint:
  stage: test
  needs:
    - backend_setup
  extends: .pull_cached_node_modules
  script:
    - (cd ./backend && npm run lint)

frontend_lint:
  stage: test
  needs:
    - frontend_setup
  extends: .pull_cached_node_modules
  script:
    - (cd ./frontend && npm run lint)

backend_test:
  stage: test
  needs:
    - backend_setup
  extends: .pull_cached_node_modules
  script:
    - (cd ./backend && npm run test)

frontend_test:
  stage: test
  needs:
    - frontend_setup
  extends: .pull_cached_node_modules
  script:
    - (cd ./frontend && npm run test)

backend_build:
  stage: deploy
  image: docker:latest
  needs:
    - backend_lint
    - backend_test
  script:
    - (cd ./backend && docker build -t backend:latest .)
  only:
    - main

frontend_build:
  stage: deploy
  image: docker:latest
  needs:
    - frontend_lint
    - frontend_test
  script:
    - (cd ./backend && docker build -t frontend:latest .)
  only:
    - main
