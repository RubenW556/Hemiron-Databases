image: nielsprins/ipsenh-ci

.pull_backend_npm_cache:
  before_script:
    - (cd ./backend && npm ci --cache .npm --prefer-offline)
  cache:
    untracked: true
    policy: pull
    key:
      files:
        - backend/package-lock.json
    paths:
      - backend/.npm/

.pull_frontend_npm_cache:
  before_script:
    - (cd ./frontend && npm ci --cache .npm --prefer-offline)
  cache:
    untracked: true
    policy: pull
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/

stages:
  - setup
  - test
  - build
  - deploy

backend_npm_install:
  stage: setup
  cache:
    key:
      files:
        - backend/package-lock.json
    paths:
      - backend/.npm/
  script:
    - (cd ./backend && npm ci --include=dev --cache .npm)

frontend_npm_install:
  stage: setup
  cache:
    key:
      files:
        - frontend/package-lock.json
    paths:
      - frontend/.npm/
  script:
    - (cd ./frontend && npm ci --include=dev --cache .npm)

backend_audit:
  stage: test
  allow_failure: true
  needs:
    - backend_npm_install
  extends: .pull_backend_npm_cache
  script:
    - (cd ./backend && npm audit)

frontend_audit:
  stage: test
  allow_failure: true
  needs:
    - frontend_npm_install
  extends: .pull_frontend_npm_cache
  script:
    - (cd ./frontend && npm audit)

backend_lint:
  stage: test
  needs:
    - backend_npm_install
  extends: .pull_backend_npm_cache
  script:
    - (cd ./backend && npm run lint)

frontend_lint:
  stage: test
  needs:
    - frontend_npm_install
  extends: .pull_frontend_npm_cache
  script:
    - (cd ./frontend && npm run lint)

backend_test:
  stage: test
  needs:
    - backend_npm_install
  extends: .pull_backend_npm_cache
  script:
    - (cd ./backend && npm run test)

frontend_test:
  stage: test
  needs:
    - frontend_npm_install
  extends: .pull_frontend_npm_cache
  script:
    - (cd ./frontend && npm run test)

backend_build:
  stage: deploy
  needs:
    - backend_lint
    - backend_test
  script:
    - (cd ./backend && docker build -t backend:latest .)
  only:
    - main

frontend_build:
  stage: deploy
  needs:
    - frontend_lint
    - frontend_test
  script:
    - (cd ./backend && docker build -t frontend:latest .)
  only:
    - main
