networks:
  databases-frontend-dev:
    name: databases-frontend-dev
  hemiron-ntw-compose:
    external: true
    name: hemiron-ntw-compose

services: # docker compose up --build
  frontend:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: site
    # conventie: [branch]-[versie]-[base]
    # branch leeg alleen bij productie, anders afkorting branch/feature naam
    # gebruik altijd de base image van de target stage en haal de : weg
    image: registry.inf-hsleiden.nl/2223.ipsenh-p1-p2/databases/frontend:dev-0.0.1-node18-alpine
    labels:
      - "traefik.docker.network=hemiron-ntw-compose"
      # For Url api.databases.${PRIMARY_DOMAIN}
      - "traefik.http.routers.frontend.rule=Host(`site.databases.${PRIMARY_DOMAIN?Variable not set!}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.tls=false"
      - "traefik.http.services.frontend.loadbalancer.server.port=${PORT?Variable not set!}"
    command: npm run start # altijd makkelijker om npm te gebruiken zodat je docker (config) files kan hergebruiken (package.json specificeert het verder per project)
    volumes: # volume mount om veranderingen in realtime door te voeren.
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - databases-frontend-dev
      - hemiron-ntw-compose
