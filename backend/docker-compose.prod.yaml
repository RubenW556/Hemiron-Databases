version: '3.8'

networks:
  databases-backend:
    external: true
    name: databases-backend

services:
  backend:
#    command: npm run start:prod
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    deploy:
#      labels: #Labels voor reverse proxy
#        - "traefik.enable=true"
#        - "traefik.http.routers.databases-backend.rule=Host(`api.${PRIMARY_DOMAIN}`)"
#        - "traefik.http.routers.databases-backend.middlewares=authtraefik"
#        - "traefik.http.routers.databases-backend.entrypoints=websecure"
#        - "traefik.http.routers.databases-backend.tls=true"
#        - "traefik.http.routers.databases-backend.tls.certresolver=le"
#        - "traefik.http.services.databases-backend.loadbalancer.server.port=${PORT}"
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 2
        #        preferences:
        #          - spread: node.id
        constraints: # alleen op manager/worker node
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 5
        window: 10s
      update_config:
        parallelism: 1
        delay: 5s
      resources:
        limits:
          memory: 512M
          cpus: '0.4'
        reservations:
          memory: 64M
    networks:
      - databases-backend