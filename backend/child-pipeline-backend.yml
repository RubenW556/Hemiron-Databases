stages:
    - build
    - test
    - deploy

.job_docker_template: &template
    tags:
        - swarm
    only:
        refs:
            - feature/pipeline-api
        changes:
            - backend/**/*

CI_BUILD_BACKEND:
    stage: build
    variables:
        BASE_IMAGE: node18-alpine
        PROJECT_ID: backend
        IMAGE_NAME_FINAL: $IMAGE_NAME_BASE/$PROJECT_ID:1.0.$CI_PIPELINE_IID-$BASE_IMAGE
    retry: 2
    inherit:
        default: false
    <<: *template
    needs: [] # no dependencies.
    before_script:
        - echo "building for production"
        - docker login -u pipeline -p $BUILD_TOKEN $CI_REGISTRY
    script:
        - docker build -t $IMAGE_NAME_FINAL --target production $PROJECT_ID/.
    after_script:
        - docker image push $IMAGE_NAME_FINAL
        - docker image tag $IMAGE_NAME_FINAL $IMAGE_NAME_BASE/$PROJECT_ID:production
        - docker image push $IMAGE_NAME_BASE/$PROJECT_ID:production
        - docker images ls
    artifacts: # create artifact when job fails
        name: $IMAGE_NAME_FINAL
        when: on_failure
        paths:
            - ./
        expire_in: 2 days
        exclude:
            - .gitlab-ci.yml